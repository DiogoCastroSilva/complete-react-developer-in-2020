{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword,\n        onSignUpStart\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert('Passwords don\\'t match');\n        return;\n      }\n\n      onSignUpStart(email, password);\n      this.setState(this.getInitialState());\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = this.getInitialState();\n  }\n\n  getInitialState() {\n    return {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SignUpContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"I don't have an account!\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      label: \"Display Name\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      label: \"Confirm Password\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignUpStart: (email, password, displayName) => dispatch(signUpStart(email, password, displayName))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","SignUpContainer","TitleContainer","FormInput","CustomButton","signUpStart","SignUp","constructor","props","handleSubmit","e","preventDefault","displayName","email","password","confirmPassword","onSignUpStart","state","alert","setState","getInitialState","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.getInitialState();\n    }\n\n    getInitialState() {\n        return {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        };\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const { displayName, email, password, confirmPassword, onSignUpStart } = this.state;\n\n        if (password !== confirmPassword) {\n            alert('Passwords don\\'t match');\n            return;\n        }\n\n        onSignUpStart(email, password);\n        this.setState(this.getInitialState());\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target;\n\n        this.setState({Â [name]: value });\n    }\n\n    render() {\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return (\n            <SignUpContainer>\n                <TitleContainer>I don't have an account!</TitleContainer>\n                <span>Sign up with your email and password</span>\n                <form\n                    onSubmit={this.handleSubmit}\n                >\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        label='Display Name'\n                        handleChange={this.handleChange}\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        label='Email'\n                        handleChange={this.handleChange}\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        label='Password'\n                        handleChange={this.handleChange}\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        label='Confirm Password'\n                        handleChange={this.handleChange}\n                    />\n                    <CustomButton type='submit'>\n                        SIGN UP\n                    </CustomButton>\n                </form>\n            </SignUpContainer>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignUpStart: (email, password, displayName) => dispatch(signUpStart(email, password, displayName))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}