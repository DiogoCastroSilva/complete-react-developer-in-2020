{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromAuthUser(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuthUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuthUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticathed() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuthUser(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOutStart() {\n  try {\n    yield auth.signOut();\n    yield put(signOut);\n  } catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticathed);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","UserActionTypes","auth","createUserProfileDocument","getCurrentUser","googleProvider","signInSuccess","signInFailure","getSnapshotFromAuthUser","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticathed","userAuth","signOutStart","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\n\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase.utils';\nimport {\n    signInSuccess,\n    signInFailure,\n} from \"./user.actions\";\n\n\nfunction* getSnapshotFromAuthUser(user) {\n    try {\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromAuthUser(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({Â payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromAuthUser(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* isUserAuthenticathed() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromAuthUser(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOutStart() {\n    try {\n        yield auth.signOut();\n        yield put(signOut)\n    } catch (error) {\n\n    }\n}\n\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, );\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticathed);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}