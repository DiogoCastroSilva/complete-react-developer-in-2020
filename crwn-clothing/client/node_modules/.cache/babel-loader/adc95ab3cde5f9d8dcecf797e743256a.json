{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionError } from './shop.actions';\nexport function* fecthCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionError(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fecthCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield;\n}","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionSuccess","fetchCollectionError","fecthCollectionsAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTION_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,gBAA7D;AAIA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACI,8BAAD,EAAiCM,QAAjC,CAAhC;AACA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,aAAD,CAAvB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACK,oBAAoB,CAACO,KAAK,CAACC,OAAP,CAArB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,UAAU,CAACG,eAAe,CAACc,sBAAjB,EAAyCT,qBAAzC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB;AACH","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionError } from './shop.actions';\n\n\n\nexport function* fecthCollectionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n        yield put(fetchCollectionSuccess(collectionMap));\n    } catch (error) {\n        yield put(fetchCollectionError(error.message));\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fecthCollectionsAsync);\n}\n\nexport function* shopSagas() {\n    yield\n}"]},"metadata":{},"sourceType":"module"}