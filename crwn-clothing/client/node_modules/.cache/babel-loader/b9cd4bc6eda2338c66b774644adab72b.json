{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar config = {\n  apiKey: \"AIzaSyBHQX6mu1EqWkhWYl8L_54bkkgQGOALAkg\",\n  authDomain: \"react-crwn-clothing-dfab6.firebaseapp.com\",\n  databaseURL: \"https://react-crwn-clothing-dfab6.firebaseio.com\",\n  projectId: \"react-crwn-clothing-dfab6\",\n  storageBucket: \"react-crwn-clothing-dfab6.appspot.com\",\n  messagingSenderId: \"998041460050\",\n  appId: \"1:998041460050:web:098a095ab23792e436ee8b\",\n  measurementId: \"G-9RZKVMH8JG\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userData.uid}`);\n  const snapshot = userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', errormessage);\n    }\n  }\n}; // Initialize Firebase\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","userData","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","errormessage","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,2CAFH;AAGTC,EAAAA,WAAW,EAAE,kDAHJ;AAITC,EAAAA,SAAS,EAAE,2BAJF;AAKTC,EAAAA,aAAa,EAAE,uCALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQC,QAAQ,CAACC,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAGL,OAAO,CAACM,GAAR,EAAjB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBX,QAA/B;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMX,OAAO,CAACY,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGX;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOc,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,YAAnC;AACH;AACJ;AACJ,CArBM,C,CAuBP;;AACA7B,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAEA,OAAO,MAAM8B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar config = {\n    apiKey: \"AIzaSyBHQX6mu1EqWkhWYl8L_54bkkgQGOALAkg\",\n    authDomain: \"react-crwn-clothing-dfab6.firebaseapp.com\",\n    databaseURL: \"https://react-crwn-clothing-dfab6.firebaseio.com\",\n    projectId: \"react-crwn-clothing-dfab6\",\n    storageBucket: \"react-crwn-clothing-dfab6.appspot.com\",\n    messagingSenderId: \"998041460050\",\n    appId: \"1:998041460050:web:098a095ab23792e436ee8b\",\n    measurementId: \"G-9RZKVMH8JG\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userData.uid}`);\n    const snapshot = userRef.get();\n\n    if (!snapshot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('Error creating user', errormessage);\n        }\n    }\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}