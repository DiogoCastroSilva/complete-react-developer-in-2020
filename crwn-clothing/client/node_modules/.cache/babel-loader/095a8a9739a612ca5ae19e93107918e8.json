{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoaded, selectorCollectionFetching } from '../../redux/shop/shop.selector';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectorCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","Collection","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionLoaded","selectorCollectionFetching","CollectionOverViewWithSpinner","CollectionWithSpinner","Shop","componentDidMount","props","render","match","isCollectionsFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,EAAmCC,0BAAnC,QAAqE,gCAArE;AAGA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACH,mBAAD,CAAjD;AACA,MAAMQ,qBAAqB,GAAGL,WAAW,CAACF,UAAD,CAAzC;;AAEA,MAAMQ,IAAN,SAAmBZ,SAAnB,CAA6B;AAEzBa,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC7B;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,qBAAT;AAAgCC,MAAAA;AAAhC,QAAuD,KAAKJ,KAAlE;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,6BAAD;AACI,QAAA,SAAS,EAAEG;AADf,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAWI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,qBAAD;AACI,QAAA,SAAS,EAAEI;AADf,SAEQJ,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAuBH;;AAjCwB;;AAkC5B;AAGD,MAAMM,eAAe,GAAGb,wBAAwB,CAAC;AAC7CU,EAAAA,qBAAqB,EAAER,0BADsB;AAE7CS,EAAAA,kBAAkB,EAAEV;AAFyB,CAAD,CAAhD;;AAKC,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACHjB,IAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADvC,GAAP;AAGH,CAJA;;AAMD,eAAeH,OAAO,CAClBkB,eADkB,EAElBC,kBAFkB,CAAP,CAGbT,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoaded, selectorCollectionFetching } from '../../redux/shop/shop.selector';\n\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();       \n    }\n\n    render() {\n        const { match, isCollectionsFetching, isCollectionLoaded } = this.props;\n\n        return (\n            <div>\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    render={(props) =>\n                        <CollectionOverViewWithSpinner\n                            isLoading={isCollectionsFetching}\n                            {...props}\n                        />\n                    }\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={(props) =>\n                        <CollectionWithSpinner\n                            isLoading={isCollectionLoaded}\n                            {...props}\n                        />\n                    }\n                />\n            </div>\n        );\n    }\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionsFetching: selectorCollectionFetching,\n    isCollectionLoaded: selectIsCollectionLoaded\n});\n\n const mapDispatchToProps = dispatch => {\n    return {\n        fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop);"]},"metadata":{},"sourceType":"module"}