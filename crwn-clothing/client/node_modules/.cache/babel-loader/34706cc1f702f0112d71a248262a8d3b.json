{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\n\nfunction* getSnapshotFromAuthUser(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuthUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuthUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticathed() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuthUser(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOutStart() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromAuthUser(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutStart);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticathed);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","UserActionTypes","auth","createUserProfileDocument","getCurrentUser","googleProvider","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromAuthUser","user","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticathed","userAuth","signOutStart","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onCheckUserSession","CHECK_USER_SESSION","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n    auth,\n    createUserProfileDocument,\n    getCurrentUser,\n    googleProvider\n} from '../../firebase/firebase.utils';\nimport {\n    signInSuccess,\n    signInFailure,\n    signOutSuccess,\n    signOutFailure,\n    signUpFailure,\n    signUpSuccess\n} from \"./user.actions\";\n\n\nfunction* getSnapshotFromAuthUser(user, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, user, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromAuthUser(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({Â payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromAuthUser(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* isUserAuthenticathed() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromAuthUser(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOutStart() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* signUp({ payload: { email, password, displayName }}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({ user, additionalData: { displayName } }))\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\n    yield getSnapshotFromAuthUser(user, additionalData);\n}\n\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutStart);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticathed);\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}