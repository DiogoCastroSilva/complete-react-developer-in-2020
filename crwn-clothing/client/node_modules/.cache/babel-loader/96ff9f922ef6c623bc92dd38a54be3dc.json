{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\nimport { convertCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Co);\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot.unsubscribe();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","Collection","convertCollectionSnapshotToMap","firestore","updateCollections","WithSpinner","CollectionOverViewWithSpinner","CollectionWithSpinner","Co","Shop","unsubscribeFromSnapshot","state","loading","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","componentWillUnmount","unsubscribe","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,SAASC,8BAAT,EAAyCC,SAAzC,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;AACA,MAAMO,qBAAqB,GAAGF,WAAW,CAACG,EAAD,CAAzC;;AAEA,MAAMC,IAAN,SAAmBZ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBa,uBADyB,GACC,IADD;AAAA,SAEzBC,KAFyB,GAEjB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFiB;AAAA;;AAMzBC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKN,uBAAL,GAA+BK,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACAd,MAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDS,EAAAA,oBAAoB,GAAG;AACnB,SAAKX,uBAAL,CAA6BY,WAA7B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAFxB;AAGI,MAAA,SAAS,EAAEzB,mBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEwB,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,SAAS,EAAExB,UAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAaH;;AApCwB;;AAqC5B;;AAED,MAAMyB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHvB,IAAAA,iBAAiB,EAAEwB,cAAc,IAC7BD,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AAFT,GAAP;AAIH,CALD;;AAOA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCjB,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\n\nimport { convertCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Co);\n\nclass Shop extends Component {\n    unsubscribeFromSnapshot = null;\n    state = {\n        loading: true\n    };\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            updateCollections(collectionMap);\n            this.setState({ loading: false });\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromSnapshot.unsubscribe();\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n        <div>\n            <Route\n                exact\n                path={`${match.path}`}\n                component={CollectionsOverview}\n            />\n            <Route\n                path={`${match.path}/:collectionId`}\n                component={Collection}\n            />\n        </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateCollections: collectionsMap =>\n            dispatch(updateCollections(collectionsMap))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}