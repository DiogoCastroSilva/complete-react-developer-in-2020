{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { SignInContainer, TitleContainer, ButtonsBarContainer } from './sign-in.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.error('Error signing in', error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"I alredy have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"passsword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    googleSignInStart: dispatch(googleS)\n  };\n};\n\nexport default connect()(SignIn);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","SignInContainer","TitleContainer","ButtonsBarContainer","FormInput","CustomButton","signInWithGoogle","auth","connect","SignIn","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","handleChange","name","value","target","render","mapDispatchToProps","dispatch","googleSignInStart","googleS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    SignInContainer,\n    TitleContainer,\n    ButtonsBarContainer\n} from './sign-in.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const { email, password } = this.state;\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({ email: '', password: '' });\n        } catch (error) {\n            console.error('Error signing in', error);\n        }\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        const { email, password } = this.state;\n\n        return (\n            <SignInContainer>\n                <TitleContainer>I alredy have an account</TitleContainer>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type='email'\n                        value={email}\n                        required\n                        handleChange={this.handleChange}\n                        label='email'\n                    />\n                    <FormInput\n                        name='password'\n                        type='password'\n                        value={password}\n                        required\n                        handleChange={this.handleChange}\n                        label='passsword'\n                    />\n                    <ButtonsBarContainer>\n                        <CustomButton\n                            type='submit'\n                        >\n                            Sign in\n                        </CustomButton>\n                        <CustomButton\n                            onClick={signInWithGoogle}\n                            color='primary'\n                        >\n                            Sign in with Google \n                        </CustomButton>\n                    </ButtonsBarContainer>\n                </form>\n            </SignInContainer>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        googleSignInStart: dispatch(googleS)\n    };\n};\n\nexport default connect()(SignIn);"]},"metadata":{},"sourceType":"module"}