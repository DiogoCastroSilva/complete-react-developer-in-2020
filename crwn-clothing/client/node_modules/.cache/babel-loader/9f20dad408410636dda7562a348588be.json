{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist'; // import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [createSagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,UAAU,GAAG,CAACJ,oBAAD,CAAnB;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAC5BK,WAD4B,EAE5BJ,eAAe,CAAC,GAAGO,UAAJ,CAFa,CAAzB;AAKPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n// import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root-reducer';\n\nimport { fetchCollectionsStart } from './shop/shop.sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [createSagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middleware.push(logger);\n}\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(...middleware)\n);\n\nsagaMiddleware.run(fetchCollectionsStart);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}