{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoaded, selectorCollectionFetching } from '../../redux/shop/shop.selector';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nconst Shop = ({\n  match,\n  isCollectionLoaded,\n  isCollectionsFetching,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n      isLoading: isCollectionsFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n      isLoading: !isCollectionLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectorCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverview","Collection","fetchCollectionsStart","WithSpinner","createStructuredSelector","selectIsCollectionLoaded","selectorCollectionFetching","CollectionOverViewWithSpinner","CollectionWithSpinner","Shop","match","isCollectionLoaded","isCollectionsFetching","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,EAAmCC,0BAAnC,QAAqE,gCAArE;AAGA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACH,mBAAD,CAAjD;AACA,MAAMQ,qBAAqB,GAAGL,WAAW,CAACF,UAAD,CAAzC;;AAEA,MAAMQ,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,kBAAT;AAA6BC,EAAAA,qBAA7B;AAAoDV,EAAAA;AAApD,CAAD,KAAiF;AAE1FL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAEQ,KAAK,CAACG,IAAK,EAFxB;AAGI,IAAA,MAAM,EAAGC,KAAD,iBACJ,oBAAC,6BAAD;AACI,MAAA,SAAS,EAAEF;AADf,OAEQE,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEJ,KAAK,CAACG,IAAK,gBADxB;AAEI,IAAA,MAAM,EAAGC,KAAD,iBACJ,oBAAC,qBAAD;AACI,MAAA,SAAS,EAAE,CAACH;AADhB,OAEQG,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAuBH,CA7BD;;AAgCA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC7CQ,EAAAA,qBAAqB,EAAEN,0BADsB;AAE7CK,EAAAA,kBAAkB,EAAEN;AAFyB,CAAD,CAAhD;;AAKC,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACH;AACAf,IAAAA,qBAAqB,EAAE,MAAMe,QAAQ,CAACf,qBAAqB,EAAtB;AAFlC,GAAP;AAIH,CALA;;AAOD,eAAeH,OAAO,CAClBgB,eADkB,EAElBC,kBAFkB,CAAP,CAGbP,IAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport Collection from '../collection/collection.component';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoaded, selectorCollectionFetching } from '../../redux/shop/shop.selector';\n\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nconst Shop = ({ match, isCollectionLoaded, isCollectionsFetching, fetchCollectionsStart }) => {\n\n    useEffect(() => {\n        fetchCollectionsStart();   \n    }, [fetchCollectionsStart]);\n\n    return (\n        <div>\n            <Route\n                exact\n                path={`${match.path}`}\n                render={(props) =>\n                    <CollectionOverViewWithSpinner\n                        isLoading={isCollectionsFetching}\n                        {...props}\n                    />\n                }\n            />\n            <Route\n                path={`${match.path}/:collectionId`}\n                render={(props) =>\n                    <CollectionWithSpinner\n                        isLoading={!isCollectionLoaded}\n                        {...props}\n                    />\n                }\n            />\n        </div>\n    );\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionsFetching: selectorCollectionFetching,\n    isCollectionLoaded: selectIsCollectionLoaded\n});\n\n const mapDispatchToProps = dispatch => {\n    return {\n        // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n        fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop);"]},"metadata":{},"sourceType":"module"}