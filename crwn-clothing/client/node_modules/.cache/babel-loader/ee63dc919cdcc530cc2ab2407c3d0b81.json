{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  onSignUpStart\n}) => {\n  const [signUpData, setSignUpData] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = signUpData;\n\n    if (password !== confirmPassword) {\n      alert('Passwords don\\'t match');\n      return;\n    }\n\n    onSignUpStart(email, password, displayName);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignUpData({\n      [name]: value,\n      ...signUpData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"I don't have an account!\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Display Name\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignUpStart: (email, password, displayName) => dispatch(signUpStart(email, password, displayName))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","SignUpContainer","TitleContainer","FormInput","CustomButton","signUpStart","SignUp","onSignUpStart","signUpData","setSignUpData","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\n\nconst SignUp = ({ onSignUpStart }) => {\n    const [signUpData, setSignUpData] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        const { displayName, email, password, confirmPassword } = signUpData;\n\n        if (password !== confirmPassword) {\n            alert('Passwords don\\'t match');\n            return;\n        }\n\n        onSignUpStart(email, password, displayName);\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        setSignUpData({Â [name]: value, ...signUpData });\n    }\n\n    return (\n        <SignUpContainer>\n            <TitleContainer>I don't have an account!</TitleContainer>\n            <span>Sign up with your email and password</span>\n            <form\n                onSubmit={handleSubmit}\n            >\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    label='Display Name'\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    label='Email'\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    label='Password'\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    label='Confirm Password'\n                    handleChange={handleChange}\n                />\n                <CustomButton type='submit'>\n                    SIGN UP\n                </CustomButton>\n            </form>\n        </SignUpContainer>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignUpStart: (email, password, displayName) => dispatch(signUpStart(email, password, displayName))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}