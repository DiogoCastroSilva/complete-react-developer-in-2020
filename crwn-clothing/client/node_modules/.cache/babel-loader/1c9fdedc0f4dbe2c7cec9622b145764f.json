{"ast":null,"code":"var _jsxFileName = \"/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, TitleContainer, ButtonsBarContainer } from './sign-in.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        onEmailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      onEmailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      onGoogleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"I alredy have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"passsword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: onGoogleSignInStart,\n      color: \"primary\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGoogleSignInStart: () => dispatch(googleSignInStart()),\n    onEmailSignInStart: (email, password) => dispatch(emailSignInStart({\n      email: email,\n      password: password\n    }))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/diogosilva/Desktop/complete-react-developer-in-2020/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","SignInContainer","TitleContainer","ButtonsBarContainer","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","constructor","props","handleSubmit","e","preventDefault","onEmailSignInStart","email","password","state","handleChange","name","value","target","setState","render","onGoogleSignInStart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    SignInContainer,\n    TitleContainer,\n    ButtonsBarContainer\n} from './sign-in.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const { onEmailSignInStart } = this.props;\n        const { email, password } = this.state;\n\n        onEmailSignInStart(email, password);\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        const { email, password } = this.state;\n        const { onGoogleSignInStart } = this.props;\n\n        return (\n            <SignInContainer>\n                <TitleContainer>I alredy have an account</TitleContainer>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type='email'\n                        value={email}\n                        required\n                        handleChange={this.handleChange}\n                        label='email'\n                    />\n                    <FormInput\n                        name='password'\n                        type='password'\n                        value={password}\n                        required\n                        handleChange={this.handleChange}\n                        label='passsword'\n                    />\n                    <ButtonsBarContainer>\n                        <CustomButton\n                            type='submit'\n                        >\n                            Sign in\n                        </CustomButton>\n                        <CustomButton\n                            onClick={onGoogleSignInStart}\n                            color='primary'\n                            type='button'\n                        >\n                            Sign in with Google \n                        </CustomButton>\n                    </ButtonsBarContainer>\n                </form>\n            </SignInContainer>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGoogleSignInStart: () => dispatch(googleSignInStart()),\n        onEmailSignInStart: (email, password) => dispatch(emailSignInStart({\n            email: email,\n            password: password\n        }))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}